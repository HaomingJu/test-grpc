// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/get_model_metadata.proto

#include "tensorflow_serving/apis/get_model_metadata.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
namespace serving {
PROTOBUF_CONSTEXPR SignatureDefMap_SignatureDefEntry_DoNotUse::SignatureDefMap_SignatureDefEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct SignatureDefMap_SignatureDefEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDefMap_SignatureDefEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDefMap_SignatureDefEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SignatureDefMap_SignatureDefEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDefMap_SignatureDefEntry_DoNotUseDefaultTypeInternal _SignatureDefMap_SignatureDefEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR SignatureDefMap::SignatureDefMap(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.signature_def_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SignatureDefMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureDefMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureDefMapDefaultTypeInternal() {}
  union {
    SignatureDefMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureDefMapDefaultTypeInternal _SignatureDefMap_default_instance_;
PROTOBUF_CONSTEXPR GetModelMetadataRequest::GetModelMetadataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metadata_field_)*/{}
  , /*decltype(_impl_.model_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModelMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelMetadataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelMetadataRequestDefaultTypeInternal() {}
  union {
    GetModelMetadataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelMetadataRequestDefaultTypeInternal _GetModelMetadataRequest_default_instance_;
PROTOBUF_CONSTEXPR GetModelMetadataResponse_MetadataEntry_DoNotUse::GetModelMetadataResponse_MetadataEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GetModelMetadataResponse_MetadataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelMetadataResponse_MetadataEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelMetadataResponse_MetadataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetModelMetadataResponse_MetadataEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelMetadataResponse_MetadataEntry_DoNotUseDefaultTypeInternal _GetModelMetadataResponse_MetadataEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GetModelMetadataResponse::GetModelMetadataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metadata_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.model_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetModelMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetModelMetadataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetModelMetadataResponseDefaultTypeInternal() {}
  union {
    GetModelMetadataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetModelMetadataResponseDefaultTypeInternal _GetModelMetadataResponse_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::SignatureDefMap, _impl_.signature_def_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataRequest, _impl_.model_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataRequest, _impl_.metadata_field_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse, _impl_.model_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::GetModelMetadataResponse, _impl_.metadata_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::tensorflow::serving::SignatureDefMap)},
  { 17, -1, -1, sizeof(::tensorflow::serving::GetModelMetadataRequest)},
  { 25, 33, -1, sizeof(::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse)},
  { 35, -1, -1, sizeof(::tensorflow::serving::GetModelMetadataResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::serving::_SignatureDefMap_SignatureDefEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::serving::_SignatureDefMap_default_instance_._instance,
  &::tensorflow::serving::_GetModelMetadataRequest_default_instance_._instance,
  &::tensorflow::serving::_GetModelMetadataResponse_MetadataEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::serving::_GetModelMetadataResponse_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n0tensorflow_serving/apis/get_model_meta"
  "data.proto\022\022tensorflow.serving\032\031google/p"
  "rotobuf/any.proto\032)tensorflow/core/proto"
  "buf/meta_graph.proto\032#tensorflow_serving"
  "/apis/model.proto\"\256\001\n\017SignatureDefMap\022L\n"
  "\rsignature_def\030\001 \003(\01325.tensorflow.servin"
  "g.SignatureDefMap.SignatureDefEntry\032M\n\021S"
  "ignatureDefEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002"
  " \001(\0132\030.tensorflow.SignatureDef:\0028\001\"d\n\027Ge"
  "tModelMetadataRequest\0221\n\nmodel_spec\030\001 \001("
  "\0132\035.tensorflow.serving.ModelSpec\022\026\n\016meta"
  "data_field\030\002 \003(\t\"\342\001\n\030GetModelMetadataRes"
  "ponse\0221\n\nmodel_spec\030\001 \001(\0132\035.tensorflow.s"
  "erving.ModelSpec\022L\n\010metadata\030\002 \003(\0132:.ten"
  "sorflow.serving.GetModelMetadataResponse"
  ".MetadataEntry\032E\n\rMetadataEntry\022\013\n\003key\030\001"
  " \001(\t\022#\n\005value\030\002 \001(\0132\024.google.protobuf.An"
  "y:\0028\001B\003\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto,
  &::descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto = {
    false, false, 698, descriptor_table_protodef_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto,
    "tensorflow_serving/apis/get_model_metadata.proto",
    &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once, descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_deps, 3, 5,
    schemas, file_default_instances, TableStruct_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto::offsets,
    file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto, file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_getter() {
  return &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto(&descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto);
namespace tensorflow {
namespace serving {

// ===================================================================

SignatureDefMap_SignatureDefEntry_DoNotUse::SignatureDefMap_SignatureDefEntry_DoNotUse() {}
SignatureDefMap_SignatureDefEntry_DoNotUse::SignatureDefMap_SignatureDefEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SignatureDefMap_SignatureDefEntry_DoNotUse::MergeFrom(const SignatureDefMap_SignatureDefEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SignatureDefMap_SignatureDefEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[0]);
}

// ===================================================================

class SignatureDefMap::_Internal {
 public:
};

void SignatureDefMap::clear_signature_def() {
  _impl_.signature_def_.Clear();
}
SignatureDefMap::SignatureDefMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &SignatureDefMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.SignatureDefMap)
}
SignatureDefMap::SignatureDefMap(const SignatureDefMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SignatureDefMap* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.signature_def_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.signature_def_.MergeFrom(from._impl_.signature_def_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.SignatureDefMap)
}

inline void SignatureDefMap::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.signature_def_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SignatureDefMap::~SignatureDefMap() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.SignatureDefMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void SignatureDefMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.signature_def_.Destruct();
  _impl_.signature_def_.~MapField();
}

void SignatureDefMap::ArenaDtor(void* object) {
  SignatureDefMap* _this = reinterpret_cast< SignatureDefMap* >(object);
  _this->_impl_.signature_def_.Destruct();
}
void SignatureDefMap::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SignatureDefMap::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.SignatureDefMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signature_def_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SignatureDefMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .tensorflow.SignatureDef> signature_def = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.signature_def_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SignatureDefMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.SignatureDefMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  if (!this->_internal_signature_def().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::SignatureDef>;
    using WireHelper = SignatureDefMap_SignatureDefEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_signature_def();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.serving.SignatureDefMap.SignatureDefEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.SignatureDefMap)
  return target;
}

size_t SignatureDefMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.SignatureDefMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.SignatureDef> signature_def = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_signature_def_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SignatureDef >::const_iterator
      it = this->_internal_signature_def().begin();
      it != this->_internal_signature_def().end(); ++it) {
    total_size += SignatureDefMap_SignatureDefEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SignatureDefMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SignatureDefMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SignatureDefMap::GetClassData() const { return &_class_data_; }


void SignatureDefMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SignatureDefMap*>(&to_msg);
  auto& from = static_cast<const SignatureDefMap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.SignatureDefMap)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.signature_def_.MergeFrom(from._impl_.signature_def_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SignatureDefMap::CopyFrom(const SignatureDefMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.SignatureDefMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignatureDefMap::IsInitialized() const {
  return true;
}

void SignatureDefMap::InternalSwap(SignatureDefMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.signature_def_.InternalSwap(&other->_impl_.signature_def_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SignatureDefMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[1]);
}

// ===================================================================

class GetModelMetadataRequest::_Internal {
 public:
  static const ::tensorflow::serving::ModelSpec& model_spec(const GetModelMetadataRequest* msg);
};

const ::tensorflow::serving::ModelSpec&
GetModelMetadataRequest::_Internal::model_spec(const GetModelMetadataRequest* msg) {
  return *msg->_impl_.model_spec_;
}
void GetModelMetadataRequest::clear_model_spec() {
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
}
GetModelMetadataRequest::GetModelMetadataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.GetModelMetadataRequest)
}
GetModelMetadataRequest::GetModelMetadataRequest(const GetModelMetadataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModelMetadataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_field_){from._impl_.metadata_field_}
    , decltype(_impl_.model_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_model_spec()) {
    _this->_impl_.model_spec_ = new ::tensorflow::serving::ModelSpec(*from._impl_.model_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.GetModelMetadataRequest)
}

inline void GetModelMetadataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metadata_field_){arena}
    , decltype(_impl_.model_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetModelMetadataRequest::~GetModelMetadataRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.GetModelMetadataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetModelMetadataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metadata_field_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.model_spec_;
}

void GetModelMetadataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModelMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.GetModelMetadataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_field_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelMetadataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string metadata_field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_metadata_field();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "tensorflow.serving.GetModelMetadataRequest.metadata_field"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelMetadataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.GetModelMetadataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->_internal_has_model_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model_spec(this),
        _Internal::model_spec(this).GetCachedSize(), target, stream);
  }

  // repeated string metadata_field = 2;
  for (int i = 0, n = this->_internal_metadata_field_size(); i < n; i++) {
    const auto& s = this->_internal_metadata_field(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.serving.GetModelMetadataRequest.metadata_field");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.GetModelMetadataRequest)
  return target;
}

size_t GetModelMetadataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.GetModelMetadataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string metadata_field = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.metadata_field_.size());
  for (int i = 0, n = _impl_.metadata_field_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.metadata_field_.Get(i));
  }

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->_internal_has_model_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelMetadataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModelMetadataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelMetadataRequest::GetClassData() const { return &_class_data_; }


void GetModelMetadataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModelMetadataRequest*>(&to_msg);
  auto& from = static_cast<const GetModelMetadataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.GetModelMetadataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_field_.MergeFrom(from._impl_.metadata_field_);
  if (from._internal_has_model_spec()) {
    _this->_internal_mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(
        from._internal_model_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelMetadataRequest::CopyFrom(const GetModelMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.GetModelMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelMetadataRequest::IsInitialized() const {
  return true;
}

void GetModelMetadataRequest::InternalSwap(GetModelMetadataRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_field_.InternalSwap(&other->_impl_.metadata_field_);
  swap(_impl_.model_spec_, other->_impl_.model_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelMetadataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[2]);
}

// ===================================================================

GetModelMetadataResponse_MetadataEntry_DoNotUse::GetModelMetadataResponse_MetadataEntry_DoNotUse() {}
GetModelMetadataResponse_MetadataEntry_DoNotUse::GetModelMetadataResponse_MetadataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetModelMetadataResponse_MetadataEntry_DoNotUse::MergeFrom(const GetModelMetadataResponse_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetModelMetadataResponse_MetadataEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[3]);
}

// ===================================================================

class GetModelMetadataResponse::_Internal {
 public:
  static const ::tensorflow::serving::ModelSpec& model_spec(const GetModelMetadataResponse* msg);
};

const ::tensorflow::serving::ModelSpec&
GetModelMetadataResponse::_Internal::model_spec(const GetModelMetadataResponse* msg) {
  return *msg->_impl_.model_spec_;
}
void GetModelMetadataResponse::clear_model_spec() {
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
}
void GetModelMetadataResponse::clear_metadata() {
  _impl_.metadata_.Clear();
}
GetModelMetadataResponse::GetModelMetadataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GetModelMetadataResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.GetModelMetadataResponse)
}
GetModelMetadataResponse::GetModelMetadataResponse(const GetModelMetadataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetModelMetadataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.metadata_)*/{}
    , decltype(_impl_.model_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (from._internal_has_model_spec()) {
    _this->_impl_.model_spec_ = new ::tensorflow::serving::ModelSpec(*from._impl_.model_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.GetModelMetadataResponse)
}

inline void GetModelMetadataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.metadata_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.model_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetModelMetadataResponse::~GetModelMetadataResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.GetModelMetadataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GetModelMetadataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.metadata_.Destruct();
  _impl_.metadata_.~MapField();
  if (this != internal_default_instance()) delete _impl_.model_spec_;
}

void GetModelMetadataResponse::ArenaDtor(void* object) {
  GetModelMetadataResponse* _this = reinterpret_cast< GetModelMetadataResponse* >(object);
  _this->_impl_.metadata_.Destruct();
}
void GetModelMetadataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetModelMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.GetModelMetadataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metadata_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetModelMetadataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .google.protobuf.Any> metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.metadata_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetModelMetadataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.GetModelMetadataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->_internal_has_model_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model_spec(this),
        _Internal::model_spec(this).GetCachedSize(), target, stream);
  }

  // map<string, .google.protobuf.Any> metadata = 2;
  if (!this->_internal_metadata().empty()) {
    using MapType = ::_pb::Map<std::string, ::PROTOBUF_NAMESPACE_ID::Any>;
    using WireHelper = GetModelMetadataResponse_MetadataEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_metadata();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.serving.GetModelMetadataResponse.MetadataEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.GetModelMetadataResponse)
  return target;
}

size_t GetModelMetadataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.GetModelMetadataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.protobuf.Any> metadata = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_metadata_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::Any >::const_iterator
      it = this->_internal_metadata().begin();
      it != this->_internal_metadata().end(); ++it) {
    total_size += GetModelMetadataResponse_MetadataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->_internal_has_model_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetModelMetadataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetModelMetadataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetModelMetadataResponse::GetClassData() const { return &_class_data_; }


void GetModelMetadataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetModelMetadataResponse*>(&to_msg);
  auto& from = static_cast<const GetModelMetadataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.GetModelMetadataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.metadata_.MergeFrom(from._impl_.metadata_);
  if (from._internal_has_model_spec()) {
    _this->_internal_mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(
        from._internal_model_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetModelMetadataResponse::CopyFrom(const GetModelMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.GetModelMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetModelMetadataResponse::IsInitialized() const {
  return true;
}

void GetModelMetadataResponse::InternalSwap(GetModelMetadataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  swap(_impl_.model_spec_, other->_impl_.model_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetModelMetadataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fget_5fmodel_5fmetadata_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::SignatureDefMap_SignatureDefEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::SignatureDefMap*
Arena::CreateMaybeMessage< ::tensorflow::serving::SignatureDefMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::SignatureDefMap >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::GetModelMetadataRequest*
Arena::CreateMaybeMessage< ::tensorflow::serving::GetModelMetadataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::GetModelMetadataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::GetModelMetadataResponse_MetadataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::GetModelMetadataResponse*
Arena::CreateMaybeMessage< ::tensorflow::serving::GetModelMetadataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::GetModelMetadataResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
