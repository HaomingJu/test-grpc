// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/apis/regression.proto

#include "tensorflow_serving/apis/regression.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
namespace serving {
PROTOBUF_CONSTEXPR Regression::Regression(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegressionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegressionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegressionDefaultTypeInternal() {}
  union {
    Regression _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegressionDefaultTypeInternal _Regression_default_instance_;
PROTOBUF_CONSTEXPR RegressionResult::RegressionResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.regressions_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegressionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegressionResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegressionResultDefaultTypeInternal() {}
  union {
    RegressionResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegressionResultDefaultTypeInternal _RegressionResult_default_instance_;
PROTOBUF_CONSTEXPR RegressionRequest::RegressionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.model_spec_)*/nullptr
  , /*decltype(_impl_.input_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegressionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegressionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegressionRequestDefaultTypeInternal() {}
  union {
    RegressionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegressionRequestDefaultTypeInternal _RegressionRequest_default_instance_;
PROTOBUF_CONSTEXPR RegressionResponse::RegressionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_.model_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegressionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegressionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegressionResponseDefaultTypeInternal() {}
  union {
    RegressionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegressionResponseDefaultTypeInternal _RegressionResponse_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_5fserving_2fapis_2fregression_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fregression_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2fapis_2fregression_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::Regression, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::Regression, _impl_.value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionResult, _impl_.regressions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionRequest, _impl_.model_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionRequest, _impl_.input_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionResponse, _impl_.model_spec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::RegressionResponse, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::serving::Regression)},
  { 7, -1, -1, sizeof(::tensorflow::serving::RegressionResult)},
  { 14, -1, -1, sizeof(::tensorflow::serving::RegressionRequest)},
  { 22, -1, -1, sizeof(::tensorflow::serving::RegressionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::serving::_Regression_default_instance_._instance,
  &::tensorflow::serving::_RegressionResult_default_instance_._instance,
  &::tensorflow::serving::_RegressionRequest_default_instance_._instance,
  &::tensorflow::serving::_RegressionResponse_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_5fserving_2fapis_2fregression_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n(tensorflow_serving/apis/regression.pro"
  "to\022\022tensorflow.serving\032#tensorflow_servi"
  "ng/apis/input.proto\032#tensorflow_serving/"
  "apis/model.proto\"\033\n\nRegression\022\r\n\005value\030"
  "\001 \001(\002\"G\n\020RegressionResult\0223\n\013regressions"
  "\030\001 \003(\0132\036.tensorflow.serving.Regression\"p"
  "\n\021RegressionRequest\0221\n\nmodel_spec\030\001 \001(\0132"
  "\035.tensorflow.serving.ModelSpec\022(\n\005input\030"
  "\002 \001(\0132\031.tensorflow.serving.Input\"}\n\022Regr"
  "essionResponse\0221\n\nmodel_spec\030\002 \001(\0132\035.ten"
  "sorflow.serving.ModelSpec\0224\n\006result\030\001 \001("
  "\0132$.tensorflow.serving.RegressionResultB"
  "\003\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_deps[2] = {
  &::descriptor_table_tensorflow_5fserving_2fapis_2finput_2eproto,
  &::descriptor_table_tensorflow_5fserving_2fapis_2fmodel_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto = {
    false, false, 492, descriptor_table_protodef_tensorflow_5fserving_2fapis_2fregression_2eproto,
    "tensorflow_serving/apis/regression.proto",
    &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_once, descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_deps, 2, 4,
    schemas, file_default_instances, TableStruct_tensorflow_5fserving_2fapis_2fregression_2eproto::offsets,
    file_level_metadata_tensorflow_5fserving_2fapis_2fregression_2eproto, file_level_enum_descriptors_tensorflow_5fserving_2fapis_2fregression_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fapis_2fregression_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_getter() {
  return &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_5fserving_2fapis_2fregression_2eproto(&descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto);
namespace tensorflow {
namespace serving {

// ===================================================================

class Regression::_Internal {
 public:
};

Regression::Regression(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.Regression)
}
Regression::Regression(const Regression& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Regression* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.value_ = from._impl_.value_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.Regression)
}

inline void Regression::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Regression::~Regression() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.Regression)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Regression::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Regression::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Regression::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.Regression)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Regression::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Regression::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.Regression)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.Regression)
  return target;
}

size_t Regression::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.Regression)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float value = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Regression::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Regression::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Regression::GetClassData() const { return &_class_data_; }


void Regression::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Regression*>(&to_msg);
  auto& from = static_cast<const Regression&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.Regression)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Regression::CopyFrom(const Regression& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.Regression)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Regression::IsInitialized() const {
  return true;
}

void Regression::InternalSwap(Regression* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Regression::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fregression_2eproto[0]);
}

// ===================================================================

class RegressionResult::_Internal {
 public:
};

RegressionResult::RegressionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressionResult)
}
RegressionResult::RegressionResult(const RegressionResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegressionResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.regressions_){from._impl_.regressions_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressionResult)
}

inline void RegressionResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.regressions_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegressionResult::~RegressionResult() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressionResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegressionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.regressions_.~RepeatedPtrField();
}

void RegressionResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegressionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressionResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.regressions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegressionResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .tensorflow.serving.Regression regressions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_regressions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegressionResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressionResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.serving.Regression regressions = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_regressions_size()); i < n; i++) {
    const auto& repfield = this->_internal_regressions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressionResult)
  return target;
}

size_t RegressionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressionResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.serving.Regression regressions = 1;
  total_size += 1UL * this->_internal_regressions_size();
  for (const auto& msg : this->_impl_.regressions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegressionResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegressionResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegressionResult::GetClassData() const { return &_class_data_; }


void RegressionResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegressionResult*>(&to_msg);
  auto& from = static_cast<const RegressionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressionResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.regressions_.MergeFrom(from._impl_.regressions_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegressionResult::CopyFrom(const RegressionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionResult::IsInitialized() const {
  return true;
}

void RegressionResult::InternalSwap(RegressionResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.regressions_.InternalSwap(&other->_impl_.regressions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegressionResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fregression_2eproto[1]);
}

// ===================================================================

class RegressionRequest::_Internal {
 public:
  static const ::tensorflow::serving::ModelSpec& model_spec(const RegressionRequest* msg);
  static const ::tensorflow::serving::Input& input(const RegressionRequest* msg);
};

const ::tensorflow::serving::ModelSpec&
RegressionRequest::_Internal::model_spec(const RegressionRequest* msg) {
  return *msg->_impl_.model_spec_;
}
const ::tensorflow::serving::Input&
RegressionRequest::_Internal::input(const RegressionRequest* msg) {
  return *msg->_impl_.input_;
}
void RegressionRequest::clear_model_spec() {
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
}
void RegressionRequest::clear_input() {
  if (GetArenaForAllocation() == nullptr && _impl_.input_ != nullptr) {
    delete _impl_.input_;
  }
  _impl_.input_ = nullptr;
}
RegressionRequest::RegressionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressionRequest)
}
RegressionRequest::RegressionRequest(const RegressionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegressionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.model_spec_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_model_spec()) {
    _this->_impl_.model_spec_ = new ::tensorflow::serving::ModelSpec(*from._impl_.model_spec_);
  }
  if (from._internal_has_input()) {
    _this->_impl_.input_ = new ::tensorflow::serving::Input(*from._impl_.input_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressionRequest)
}

inline void RegressionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.model_spec_){nullptr}
    , decltype(_impl_.input_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegressionRequest::~RegressionRequest() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegressionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.model_spec_;
  if (this != internal_default_instance()) delete _impl_.input_;
}

void RegressionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegressionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.input_ != nullptr) {
    delete _impl_.input_;
  }
  _impl_.input_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegressionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.serving.ModelSpec model_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.serving.Input input = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_input(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegressionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->_internal_has_model_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::model_spec(this),
        _Internal::model_spec(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.serving.Input input = 2;
  if (this->_internal_has_input()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::input(this),
        _Internal::input(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressionRequest)
  return target;
}

size_t RegressionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.serving.ModelSpec model_spec = 1;
  if (this->_internal_has_model_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_spec_);
  }

  // .tensorflow.serving.Input input = 2;
  if (this->_internal_has_input()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.input_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegressionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegressionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegressionRequest::GetClassData() const { return &_class_data_; }


void RegressionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegressionRequest*>(&to_msg);
  auto& from = static_cast<const RegressionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_model_spec()) {
    _this->_internal_mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(
        from._internal_model_spec());
  }
  if (from._internal_has_input()) {
    _this->_internal_mutable_input()->::tensorflow::serving::Input::MergeFrom(
        from._internal_input());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegressionRequest::CopyFrom(const RegressionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionRequest::IsInitialized() const {
  return true;
}

void RegressionRequest::InternalSwap(RegressionRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegressionRequest, _impl_.input_)
      + sizeof(RegressionRequest::_impl_.input_)
      - PROTOBUF_FIELD_OFFSET(RegressionRequest, _impl_.model_spec_)>(
          reinterpret_cast<char*>(&_impl_.model_spec_),
          reinterpret_cast<char*>(&other->_impl_.model_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegressionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fregression_2eproto[2]);
}

// ===================================================================

class RegressionResponse::_Internal {
 public:
  static const ::tensorflow::serving::ModelSpec& model_spec(const RegressionResponse* msg);
  static const ::tensorflow::serving::RegressionResult& result(const RegressionResponse* msg);
};

const ::tensorflow::serving::ModelSpec&
RegressionResponse::_Internal::model_spec(const RegressionResponse* msg) {
  return *msg->_impl_.model_spec_;
}
const ::tensorflow::serving::RegressionResult&
RegressionResponse::_Internal::result(const RegressionResponse* msg) {
  return *msg->_impl_.result_;
}
void RegressionResponse::clear_model_spec() {
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
}
RegressionResponse::RegressionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.RegressionResponse)
}
RegressionResponse::RegressionResponse(const RegressionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegressionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , decltype(_impl_.model_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::tensorflow::serving::RegressionResult(*from._impl_.result_);
  }
  if (from._internal_has_model_spec()) {
    _this->_impl_.model_spec_ = new ::tensorflow::serving::ModelSpec(*from._impl_.model_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.RegressionResponse)
}

inline void RegressionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , decltype(_impl_.model_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegressionResponse::~RegressionResponse() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.RegressionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegressionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
  if (this != internal_default_instance()) delete _impl_.model_spec_;
}

void RegressionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegressionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.RegressionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.model_spec_ != nullptr) {
    delete _impl_.model_spec_;
  }
  _impl_.model_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegressionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .tensorflow.serving.RegressionResult result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .tensorflow.serving.ModelSpec model_spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegressionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.RegressionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.serving.RegressionResult result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // .tensorflow.serving.ModelSpec model_spec = 2;
  if (this->_internal_has_model_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::model_spec(this),
        _Internal::model_spec(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.RegressionResponse)
  return target;
}

size_t RegressionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.RegressionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.serving.RegressionResult result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  // .tensorflow.serving.ModelSpec model_spec = 2;
  if (this->_internal_has_model_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.model_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegressionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegressionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegressionResponse::GetClassData() const { return &_class_data_; }


void RegressionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegressionResponse*>(&to_msg);
  auto& from = static_cast<const RegressionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.RegressionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::tensorflow::serving::RegressionResult::MergeFrom(
        from._internal_result());
  }
  if (from._internal_has_model_spec()) {
    _this->_internal_mutable_model_spec()->::tensorflow::serving::ModelSpec::MergeFrom(
        from._internal_model_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegressionResponse::CopyFrom(const RegressionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.RegressionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegressionResponse::IsInitialized() const {
  return true;
}

void RegressionResponse::InternalSwap(RegressionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegressionResponse, _impl_.model_spec_)
      + sizeof(RegressionResponse::_impl_.model_spec_)
      - PROTOBUF_FIELD_OFFSET(RegressionResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegressionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fapis_2fregression_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fapis_2fregression_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::serving::Regression*
Arena::CreateMaybeMessage< ::tensorflow::serving::Regression >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::Regression >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::RegressionResult*
Arena::CreateMaybeMessage< ::tensorflow::serving::RegressionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::RegressionResult >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::RegressionRequest*
Arena::CreateMaybeMessage< ::tensorflow::serving::RegressionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::RegressionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::RegressionResponse*
Arena::CreateMaybeMessage< ::tensorflow::serving::RegressionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::RegressionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
