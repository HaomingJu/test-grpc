// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow_serving/config/platform_config.proto

#include "tensorflow_serving/config/platform_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
namespace serving {
PROTOBUF_CONSTEXPR PlatformConfig::PlatformConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.source_adapter_config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlatformConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformConfigDefaultTypeInternal() {}
  union {
    PlatformConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformConfigDefaultTypeInternal _PlatformConfig_default_instance_;
PROTOBUF_CONSTEXPR PlatformConfigMap_PlatformConfigsEntry_DoNotUse::PlatformConfigMap_PlatformConfigsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct PlatformConfigMap_PlatformConfigsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformConfigMap_PlatformConfigsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformConfigMap_PlatformConfigsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PlatformConfigMap_PlatformConfigsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformConfigMap_PlatformConfigsEntry_DoNotUseDefaultTypeInternal _PlatformConfigMap_PlatformConfigsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR PlatformConfigMap::PlatformConfigMap(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.platform_configs_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PlatformConfigMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformConfigMapDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformConfigMapDefaultTypeInternal() {}
  union {
    PlatformConfigMap _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformConfigMapDefaultTypeInternal _PlatformConfigMap_default_instance_;
}  // namespace serving
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfig, _impl_.source_adapter_config_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::serving::PlatformConfigMap, _impl_.platform_configs_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::serving::PlatformConfig)},
  { 7, 15, -1, sizeof(::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse)},
  { 17, -1, -1, sizeof(::tensorflow::serving::PlatformConfigMap)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::serving::_PlatformConfig_default_instance_._instance,
  &::tensorflow::serving::_PlatformConfigMap_PlatformConfigsEntry_DoNotUse_default_instance_._instance,
  &::tensorflow::serving::_PlatformConfigMap_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/tensorflow_serving/config/platform_con"
  "fig.proto\022\022tensorflow.serving\032\031google/pr"
  "otobuf/any.proto\"E\n\016PlatformConfig\0223\n\025so"
  "urce_adapter_config\030\001 \001(\0132\024.google.proto"
  "buf.Any\"\305\001\n\021PlatformConfigMap\022T\n\020platfor"
  "m_configs\030\001 \003(\0132:.tensorflow.serving.Pla"
  "tformConfigMap.PlatformConfigsEntry\032Z\n\024P"
  "latformConfigsEntry\022\013\n\003key\030\001 \001(\t\0221\n\005valu"
  "e\030\002 \001(\0132\".tensorflow.serving.PlatformCon"
  "fig:\0028\001B\003\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::_pbi::once_flag descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto = {
    false, false, 380, descriptor_table_protodef_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto,
    "tensorflow_serving/config/platform_config.proto",
    &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once, descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_deps, 1, 3,
    schemas, file_default_instances, TableStruct_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto::offsets,
    file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto, file_level_enum_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto,
    file_level_service_descriptors_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_getter() {
  return &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto(&descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto);
namespace tensorflow {
namespace serving {

// ===================================================================

class PlatformConfig::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& source_adapter_config(const PlatformConfig* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
PlatformConfig::_Internal::source_adapter_config(const PlatformConfig* msg) {
  return *msg->_impl_.source_adapter_config_;
}
void PlatformConfig::clear_source_adapter_config() {
  if (GetArenaForAllocation() == nullptr && _impl_.source_adapter_config_ != nullptr) {
    delete _impl_.source_adapter_config_;
  }
  _impl_.source_adapter_config_ = nullptr;
}
PlatformConfig::PlatformConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PlatformConfig)
}
PlatformConfig::PlatformConfig(const PlatformConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PlatformConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.source_adapter_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source_adapter_config()) {
    _this->_impl_.source_adapter_config_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.source_adapter_config_);
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PlatformConfig)
}

inline void PlatformConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.source_adapter_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PlatformConfig::~PlatformConfig() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PlatformConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PlatformConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.source_adapter_config_;
}

void PlatformConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlatformConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PlatformConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.source_adapter_config_ != nullptr) {
    delete _impl_.source_adapter_config_;
  }
  _impl_.source_adapter_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlatformConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any source_adapter_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_adapter_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PlatformConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PlatformConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any source_adapter_config = 1;
  if (this->_internal_has_source_adapter_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::source_adapter_config(this),
        _Internal::source_adapter_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PlatformConfig)
  return target;
}

size_t PlatformConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PlatformConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any source_adapter_config = 1;
  if (this->_internal_has_source_adapter_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.source_adapter_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlatformConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlatformConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlatformConfig::GetClassData() const { return &_class_data_; }


void PlatformConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlatformConfig*>(&to_msg);
  auto& from = static_cast<const PlatformConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PlatformConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_source_adapter_config()) {
    _this->_internal_mutable_source_adapter_config()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_source_adapter_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlatformConfig::CopyFrom(const PlatformConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PlatformConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformConfig::IsInitialized() const {
  return true;
}

void PlatformConfig::InternalSwap(PlatformConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.source_adapter_config_, other->_impl_.source_adapter_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlatformConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[0]);
}

// ===================================================================

PlatformConfigMap_PlatformConfigsEntry_DoNotUse::PlatformConfigMap_PlatformConfigsEntry_DoNotUse() {}
PlatformConfigMap_PlatformConfigsEntry_DoNotUse::PlatformConfigMap_PlatformConfigsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void PlatformConfigMap_PlatformConfigsEntry_DoNotUse::MergeFrom(const PlatformConfigMap_PlatformConfigsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata PlatformConfigMap_PlatformConfigsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[1]);
}

// ===================================================================

class PlatformConfigMap::_Internal {
 public:
};

PlatformConfigMap::PlatformConfigMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &PlatformConfigMap::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:tensorflow.serving.PlatformConfigMap)
}
PlatformConfigMap::PlatformConfigMap(const PlatformConfigMap& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PlatformConfigMap* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.platform_configs_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.platform_configs_.MergeFrom(from._impl_.platform_configs_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.serving.PlatformConfigMap)
}

inline void PlatformConfigMap::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.platform_configs_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PlatformConfigMap::~PlatformConfigMap() {
  // @@protoc_insertion_point(destructor:tensorflow.serving.PlatformConfigMap)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void PlatformConfigMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.platform_configs_.Destruct();
  _impl_.platform_configs_.~MapField();
}

void PlatformConfigMap::ArenaDtor(void* object) {
  PlatformConfigMap* _this = reinterpret_cast< PlatformConfigMap* >(object);
  _this->_impl_.platform_configs_.Destruct();
}
void PlatformConfigMap::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PlatformConfigMap::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.serving.PlatformConfigMap)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.platform_configs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlatformConfigMap::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .tensorflow.serving.PlatformConfig> platform_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.platform_configs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PlatformConfigMap::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.serving.PlatformConfigMap)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.serving.PlatformConfig> platform_configs = 1;
  if (!this->_internal_platform_configs().empty()) {
    using MapType = ::_pb::Map<std::string, ::tensorflow::serving::PlatformConfig>;
    using WireHelper = PlatformConfigMap_PlatformConfigsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_platform_configs();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "tensorflow.serving.PlatformConfigMap.PlatformConfigsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.serving.PlatformConfigMap)
  return target;
}

size_t PlatformConfigMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.serving.PlatformConfigMap)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.serving.PlatformConfig> platform_configs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_platform_configs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::serving::PlatformConfig >::const_iterator
      it = this->_internal_platform_configs().begin();
      it != this->_internal_platform_configs().end(); ++it) {
    total_size += PlatformConfigMap_PlatformConfigsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PlatformConfigMap::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PlatformConfigMap::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PlatformConfigMap::GetClassData() const { return &_class_data_; }


void PlatformConfigMap::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PlatformConfigMap*>(&to_msg);
  auto& from = static_cast<const PlatformConfigMap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.serving.PlatformConfigMap)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.platform_configs_.MergeFrom(from._impl_.platform_configs_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PlatformConfigMap::CopyFrom(const PlatformConfigMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.serving.PlatformConfigMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformConfigMap::IsInitialized() const {
  return true;
}

void PlatformConfigMap::InternalSwap(PlatformConfigMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.platform_configs_.InternalSwap(&other->_impl_.platform_configs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlatformConfigMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_getter, &descriptor_table_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto_once,
      file_level_metadata_tensorflow_5fserving_2fconfig_2fplatform_5fconfig_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace serving
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::serving::PlatformConfig*
Arena::CreateMaybeMessage< ::tensorflow::serving::PlatformConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PlatformConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PlatformConfigMap_PlatformConfigsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::serving::PlatformConfigMap*
Arena::CreateMaybeMessage< ::tensorflow::serving::PlatformConfigMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::serving::PlatformConfigMap >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
