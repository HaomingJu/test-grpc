// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xla/service/hlo_execution_profile_data.proto

#include "xla/service/hlo_execution_profile_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace xla {
PROTOBUF_CONSTEXPR HloExecutionProfileData::HloExecutionProfileData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.profile_counters_)*/{}
  , /*decltype(_impl_._profile_counters_cached_byte_size_)*/{0}
  , /*decltype(_impl_.printer_data_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HloExecutionProfileDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HloExecutionProfileDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HloExecutionProfileDataDefaultTypeInternal() {}
  union {
    HloExecutionProfileData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HloExecutionProfileDataDefaultTypeInternal _HloExecutionProfileData_default_instance_;
}  // namespace xla
static ::_pb::Metadata file_level_metadata_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto = nullptr;

const uint32_t TableStruct_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::xla::HloExecutionProfileData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::xla::HloExecutionProfileData, _impl_.printer_data_),
  PROTOBUF_FIELD_OFFSET(::xla::HloExecutionProfileData, _impl_.profile_counters_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::xla::HloExecutionProfileData)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::xla::_HloExecutionProfileData_default_instance_._instance,
};

const char descriptor_table_protodef_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,xla/service/hlo_execution_profile_data"
  ".proto\022\003xla\032*xla/service/hlo_profile_pri"
  "nter_data.proto\"e\n\027HloExecutionProfileDa"
  "ta\0220\n\014printer_data\030\001 \001(\0132\032.xla.HloProfil"
  "ePrinterData\022\030\n\020profile_counters\030\002 \003(\003B\003"
  "\370\001\001b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_deps[1] = {
  &::descriptor_table_xla_2fservice_2fhlo_5fprofile_5fprinter_5fdata_2eproto,
};
static ::_pbi::once_flag descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto = {
    false, false, 211, descriptor_table_protodef_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto,
    "xla/service/hlo_execution_profile_data.proto",
    &descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_once, descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_deps, 1, 1,
    schemas, file_default_instances, TableStruct_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto::offsets,
    file_level_metadata_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto, file_level_enum_descriptors_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto,
    file_level_service_descriptors_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_getter() {
  return &descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto(&descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto);
namespace xla {

// ===================================================================

class HloExecutionProfileData::_Internal {
 public:
  static const ::xla::HloProfilePrinterData& printer_data(const HloExecutionProfileData* msg);
};

const ::xla::HloProfilePrinterData&
HloExecutionProfileData::_Internal::printer_data(const HloExecutionProfileData* msg) {
  return *msg->_impl_.printer_data_;
}
void HloExecutionProfileData::clear_printer_data() {
  if (GetArenaForAllocation() == nullptr && _impl_.printer_data_ != nullptr) {
    delete _impl_.printer_data_;
  }
  _impl_.printer_data_ = nullptr;
}
HloExecutionProfileData::HloExecutionProfileData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:xla.HloExecutionProfileData)
}
HloExecutionProfileData::HloExecutionProfileData(const HloExecutionProfileData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HloExecutionProfileData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.profile_counters_){from._impl_.profile_counters_}
    , /*decltype(_impl_._profile_counters_cached_byte_size_)*/{0}
    , decltype(_impl_.printer_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_printer_data()) {
    _this->_impl_.printer_data_ = new ::xla::HloProfilePrinterData(*from._impl_.printer_data_);
  }
  // @@protoc_insertion_point(copy_constructor:xla.HloExecutionProfileData)
}

inline void HloExecutionProfileData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.profile_counters_){arena}
    , /*decltype(_impl_._profile_counters_cached_byte_size_)*/{0}
    , decltype(_impl_.printer_data_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

HloExecutionProfileData::~HloExecutionProfileData() {
  // @@protoc_insertion_point(destructor:xla.HloExecutionProfileData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HloExecutionProfileData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.profile_counters_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.printer_data_;
}

void HloExecutionProfileData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HloExecutionProfileData::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.HloExecutionProfileData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.profile_counters_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.printer_data_ != nullptr) {
    delete _impl_.printer_data_;
  }
  _impl_.printer_data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HloExecutionProfileData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .xla.HloProfilePrinterData printer_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_printer_data(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int64 profile_counters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_profile_counters(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_profile_counters(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HloExecutionProfileData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xla.HloExecutionProfileData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .xla.HloProfilePrinterData printer_data = 1;
  if (this->_internal_has_printer_data()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::printer_data(this),
        _Internal::printer_data(this).GetCachedSize(), target, stream);
  }

  // repeated int64 profile_counters = 2;
  {
    int byte_size = _impl_._profile_counters_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_profile_counters(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.HloExecutionProfileData)
  return target;
}

size_t HloExecutionProfileData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.HloExecutionProfileData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 profile_counters = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int64Size(this->_impl_.profile_counters_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._profile_counters_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .xla.HloProfilePrinterData printer_data = 1;
  if (this->_internal_has_printer_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.printer_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HloExecutionProfileData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HloExecutionProfileData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HloExecutionProfileData::GetClassData() const { return &_class_data_; }


void HloExecutionProfileData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HloExecutionProfileData*>(&to_msg);
  auto& from = static_cast<const HloExecutionProfileData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.HloExecutionProfileData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.profile_counters_.MergeFrom(from._impl_.profile_counters_);
  if (from._internal_has_printer_data()) {
    _this->_internal_mutable_printer_data()->::xla::HloProfilePrinterData::MergeFrom(
        from._internal_printer_data());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HloExecutionProfileData::CopyFrom(const HloExecutionProfileData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.HloExecutionProfileData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HloExecutionProfileData::IsInitialized() const {
  return true;
}

void HloExecutionProfileData::InternalSwap(HloExecutionProfileData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.profile_counters_.InternalSwap(&other->_impl_.profile_counters_);
  swap(_impl_.printer_data_, other->_impl_.printer_data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HloExecutionProfileData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_getter, &descriptor_table_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto_once,
      file_level_metadata_xla_2fservice_2fhlo_5fexecution_5fprofile_5fdata_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::xla::HloExecutionProfileData*
Arena::CreateMaybeMessage< ::xla::HloExecutionProfileData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::HloExecutionProfileData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
