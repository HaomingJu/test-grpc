// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xla/service/xla_compile_result.proto

#include "xla/service/xla_compile_result.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace xla {
PROTOBUF_CONSTEXPR CompilerPerfStats::CompilerPerfStats(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.init_duration_)*/nullptr
  , /*decltype(_impl_.hlo_verification_duration_)*/nullptr
  , /*decltype(_impl_.compilation_prologue_duration_)*/nullptr
  , /*decltype(_impl_.compilation_duration_)*/nullptr
  , /*decltype(_impl_.total_duration_)*/nullptr} {}
struct CompilerPerfStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompilerPerfStatsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompilerPerfStatsDefaultTypeInternal() {}
  union {
    CompilerPerfStats _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompilerPerfStatsDefaultTypeInternal _CompilerPerfStats_default_instance_;
PROTOBUF_CONSTEXPR CompilationResult_CountersEntry_DoNotUse::CompilationResult_CountersEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct CompilationResult_CountersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompilationResult_CountersEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompilationResult_CountersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CompilationResult_CountersEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompilationResult_CountersEntry_DoNotUseDefaultTypeInternal _CompilationResult_CountersEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR CompilationResult::CompilationResult(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.counters_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.hlo_module_)*/nullptr
  , /*decltype(_impl_.perf_stats_)*/nullptr
  , /*decltype(_impl_.status_)*/nullptr} {}
struct CompilationResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompilationResultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompilationResultDefaultTypeInternal() {}
  union {
    CompilationResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompilationResultDefaultTypeInternal _CompilationResult_default_instance_;
}  // namespace xla
static ::_pb::Metadata file_level_metadata_xla_2fservice_2fxla_5fcompile_5fresult_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_xla_2fservice_2fxla_5fcompile_5fresult_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_xla_2fservice_2fxla_5fcompile_5fresult_2eproto = nullptr;

const uint32_t TableStruct_xla_2fservice_2fxla_5fcompile_5fresult_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _impl_.init_duration_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _impl_.hlo_verification_duration_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _impl_.compilation_prologue_duration_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _impl_.compilation_duration_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilerPerfStats, _impl_.total_duration_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult_CountersEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult_CountersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult_CountersEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult_CountersEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult, _impl_.hlo_module_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult, _impl_.perf_stats_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::xla::CompilationResult, _impl_.counters_),
  0,
  1,
  2,
  ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, -1, sizeof(::xla::CompilerPerfStats)},
  { 16, 24, -1, sizeof(::xla::CompilationResult_CountersEntry_DoNotUse)},
  { 26, 36, -1, sizeof(::xla::CompilationResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::xla::_CompilerPerfStats_default_instance_._instance,
  &::xla::_CompilationResult_CountersEntry_DoNotUse_default_instance_._instance,
  &::xla::_CompilationResult_default_instance_._instance,
};

const char descriptor_table_protodef_xla_2fservice_2fxla_5fcompile_5fresult_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$xla/service/xla_compile_result.proto\022\003"
  "xla\032\036google/protobuf/duration.proto\032\025xla"
  "/service/hlo.proto\032\031tsl/protobuf/status."
  "proto\"\261\002\n\021CompilerPerfStats\0220\n\rinit_dura"
  "tion\030\001 \001(\0132\031.google.protobuf.Duration\022<\n"
  "\031hlo_verification_duration\030\002 \001(\0132\031.googl"
  "e.protobuf.Duration\022@\n\035compilation_prolo"
  "gue_duration\030\003 \001(\0132\031.google.protobuf.Dur"
  "ation\0227\n\024compilation_duration\030\004 \001(\0132\031.go"
  "ogle.protobuf.Duration\0221\n\016total_duration"
  "\030\005 \001(\0132\031.google.protobuf.Duration\"\372\001\n\021Co"
  "mpilationResult\022\'\n\nhlo_module\030\001 \001(\0132\023.xl"
  "a.HloModuleProto\022*\n\nperf_stats\030\002 \001(\0132\026.x"
  "la.CompilerPerfStats\022\'\n\006status\030\003 \001(\0132\027.t"
  "ensorflow.StatusProto\0226\n\010counters\030\004 \003(\0132"
  "$.xla.CompilationResult.CountersEntry\032/\n"
  "\rCountersEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\003:\0028\001"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_tsl_2fprotobuf_2fstatus_2eproto,
  &::descriptor_table_xla_2fservice_2fhlo_2eproto,
};
static ::_pbi::once_flag descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto = {
    false, false, 686, descriptor_table_protodef_xla_2fservice_2fxla_5fcompile_5fresult_2eproto,
    "xla/service/xla_compile_result.proto",
    &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_once, descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_deps, 3, 3,
    schemas, file_default_instances, TableStruct_xla_2fservice_2fxla_5fcompile_5fresult_2eproto::offsets,
    file_level_metadata_xla_2fservice_2fxla_5fcompile_5fresult_2eproto, file_level_enum_descriptors_xla_2fservice_2fxla_5fcompile_5fresult_2eproto,
    file_level_service_descriptors_xla_2fservice_2fxla_5fcompile_5fresult_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_getter() {
  return &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_xla_2fservice_2fxla_5fcompile_5fresult_2eproto(&descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto);
namespace xla {

// ===================================================================

class CompilerPerfStats::_Internal {
 public:
  using HasBits = decltype(std::declval<CompilerPerfStats>()._impl_._has_bits_);
  static const ::PROTOBUF_NAMESPACE_ID::Duration& init_duration(const CompilerPerfStats* msg);
  static void set_has_init_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Duration& hlo_verification_duration(const CompilerPerfStats* msg);
  static void set_has_hlo_verification_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Duration& compilation_prologue_duration(const CompilerPerfStats* msg);
  static void set_has_compilation_prologue_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Duration& compilation_duration(const CompilerPerfStats* msg);
  static void set_has_compilation_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Duration& total_duration(const CompilerPerfStats* msg);
  static void set_has_total_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::PROTOBUF_NAMESPACE_ID::Duration&
CompilerPerfStats::_Internal::init_duration(const CompilerPerfStats* msg) {
  return *msg->_impl_.init_duration_;
}
const ::PROTOBUF_NAMESPACE_ID::Duration&
CompilerPerfStats::_Internal::hlo_verification_duration(const CompilerPerfStats* msg) {
  return *msg->_impl_.hlo_verification_duration_;
}
const ::PROTOBUF_NAMESPACE_ID::Duration&
CompilerPerfStats::_Internal::compilation_prologue_duration(const CompilerPerfStats* msg) {
  return *msg->_impl_.compilation_prologue_duration_;
}
const ::PROTOBUF_NAMESPACE_ID::Duration&
CompilerPerfStats::_Internal::compilation_duration(const CompilerPerfStats* msg) {
  return *msg->_impl_.compilation_duration_;
}
const ::PROTOBUF_NAMESPACE_ID::Duration&
CompilerPerfStats::_Internal::total_duration(const CompilerPerfStats* msg) {
  return *msg->_impl_.total_duration_;
}
void CompilerPerfStats::clear_init_duration() {
  if (_impl_.init_duration_ != nullptr) _impl_.init_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CompilerPerfStats::clear_hlo_verification_duration() {
  if (_impl_.hlo_verification_duration_ != nullptr) _impl_.hlo_verification_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CompilerPerfStats::clear_compilation_prologue_duration() {
  if (_impl_.compilation_prologue_duration_ != nullptr) _impl_.compilation_prologue_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void CompilerPerfStats::clear_compilation_duration() {
  if (_impl_.compilation_duration_ != nullptr) _impl_.compilation_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void CompilerPerfStats::clear_total_duration() {
  if (_impl_.total_duration_ != nullptr) _impl_.total_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
CompilerPerfStats::CompilerPerfStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:xla.CompilerPerfStats)
}
CompilerPerfStats::CompilerPerfStats(const CompilerPerfStats& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CompilerPerfStats* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.init_duration_){nullptr}
    , decltype(_impl_.hlo_verification_duration_){nullptr}
    , decltype(_impl_.compilation_prologue_duration_){nullptr}
    , decltype(_impl_.compilation_duration_){nullptr}
    , decltype(_impl_.total_duration_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_init_duration()) {
    _this->_impl_.init_duration_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.init_duration_);
  }
  if (from._internal_has_hlo_verification_duration()) {
    _this->_impl_.hlo_verification_duration_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.hlo_verification_duration_);
  }
  if (from._internal_has_compilation_prologue_duration()) {
    _this->_impl_.compilation_prologue_duration_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.compilation_prologue_duration_);
  }
  if (from._internal_has_compilation_duration()) {
    _this->_impl_.compilation_duration_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.compilation_duration_);
  }
  if (from._internal_has_total_duration()) {
    _this->_impl_.total_duration_ = new ::PROTOBUF_NAMESPACE_ID::Duration(*from._impl_.total_duration_);
  }
  // @@protoc_insertion_point(copy_constructor:xla.CompilerPerfStats)
}

inline void CompilerPerfStats::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.init_duration_){nullptr}
    , decltype(_impl_.hlo_verification_duration_){nullptr}
    , decltype(_impl_.compilation_prologue_duration_){nullptr}
    , decltype(_impl_.compilation_duration_){nullptr}
    , decltype(_impl_.total_duration_){nullptr}
  };
}

CompilerPerfStats::~CompilerPerfStats() {
  // @@protoc_insertion_point(destructor:xla.CompilerPerfStats)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CompilerPerfStats::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.init_duration_;
  if (this != internal_default_instance()) delete _impl_.hlo_verification_duration_;
  if (this != internal_default_instance()) delete _impl_.compilation_prologue_duration_;
  if (this != internal_default_instance()) delete _impl_.compilation_duration_;
  if (this != internal_default_instance()) delete _impl_.total_duration_;
}

void CompilerPerfStats::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CompilerPerfStats::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CompilerPerfStats)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.init_duration_ != nullptr);
      _impl_.init_duration_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.hlo_verification_duration_ != nullptr);
      _impl_.hlo_verification_duration_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.compilation_prologue_duration_ != nullptr);
      _impl_.compilation_prologue_duration_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(_impl_.compilation_duration_ != nullptr);
      _impl_.compilation_duration_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(_impl_.total_duration_ != nullptr);
      _impl_.total_duration_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompilerPerfStats::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .google.protobuf.Duration init_duration = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_init_duration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Duration hlo_verification_duration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_hlo_verification_duration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Duration compilation_prologue_duration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_compilation_prologue_duration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Duration compilation_duration = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_compilation_duration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .google.protobuf.Duration total_duration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_total_duration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompilerPerfStats::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xla.CompilerPerfStats)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .google.protobuf.Duration init_duration = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::init_duration(this),
        _Internal::init_duration(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Duration hlo_verification_duration = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::hlo_verification_duration(this),
        _Internal::hlo_verification_duration(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Duration compilation_prologue_duration = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::compilation_prologue_duration(this),
        _Internal::compilation_prologue_duration(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Duration compilation_duration = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::compilation_duration(this),
        _Internal::compilation_duration(this).GetCachedSize(), target, stream);
  }

  // optional .google.protobuf.Duration total_duration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::total_duration(this),
        _Internal::total_duration(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CompilerPerfStats)
  return target;
}

size_t CompilerPerfStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CompilerPerfStats)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .google.protobuf.Duration init_duration = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.init_duration_);
    }

    // optional .google.protobuf.Duration hlo_verification_duration = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hlo_verification_duration_);
    }

    // optional .google.protobuf.Duration compilation_prologue_duration = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.compilation_prologue_duration_);
    }

    // optional .google.protobuf.Duration compilation_duration = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.compilation_duration_);
    }

    // optional .google.protobuf.Duration total_duration = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.total_duration_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompilerPerfStats::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CompilerPerfStats::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompilerPerfStats::GetClassData() const { return &_class_data_; }


void CompilerPerfStats::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CompilerPerfStats*>(&to_msg);
  auto& from = static_cast<const CompilerPerfStats&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.CompilerPerfStats)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_init_duration()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_init_duration());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_hlo_verification_duration()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_hlo_verification_duration());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_compilation_prologue_duration()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_compilation_prologue_duration());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_compilation_duration()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_compilation_duration());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_total_duration()->::PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(
          from._internal_total_duration());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompilerPerfStats::CopyFrom(const CompilerPerfStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CompilerPerfStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompilerPerfStats::IsInitialized() const {
  return true;
}

void CompilerPerfStats::InternalSwap(CompilerPerfStats* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompilerPerfStats, _impl_.total_duration_)
      + sizeof(CompilerPerfStats::_impl_.total_duration_)
      - PROTOBUF_FIELD_OFFSET(CompilerPerfStats, _impl_.init_duration_)>(
          reinterpret_cast<char*>(&_impl_.init_duration_),
          reinterpret_cast<char*>(&other->_impl_.init_duration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompilerPerfStats::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_getter, &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_once,
      file_level_metadata_xla_2fservice_2fxla_5fcompile_5fresult_2eproto[0]);
}

// ===================================================================

CompilationResult_CountersEntry_DoNotUse::CompilationResult_CountersEntry_DoNotUse() {}
CompilationResult_CountersEntry_DoNotUse::CompilationResult_CountersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CompilationResult_CountersEntry_DoNotUse::MergeFrom(const CompilationResult_CountersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CompilationResult_CountersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_getter, &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_once,
      file_level_metadata_xla_2fservice_2fxla_5fcompile_5fresult_2eproto[1]);
}

// ===================================================================

class CompilationResult::_Internal {
 public:
  using HasBits = decltype(std::declval<CompilationResult>()._impl_._has_bits_);
  static const ::xla::HloModuleProto& hlo_module(const CompilationResult* msg);
  static void set_has_hlo_module(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::xla::CompilerPerfStats& perf_stats(const CompilationResult* msg);
  static void set_has_perf_stats(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::tensorflow::StatusProto& status(const CompilationResult* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::xla::HloModuleProto&
CompilationResult::_Internal::hlo_module(const CompilationResult* msg) {
  return *msg->_impl_.hlo_module_;
}
const ::xla::CompilerPerfStats&
CompilationResult::_Internal::perf_stats(const CompilationResult* msg) {
  return *msg->_impl_.perf_stats_;
}
const ::tensorflow::StatusProto&
CompilationResult::_Internal::status(const CompilationResult* msg) {
  return *msg->_impl_.status_;
}
void CompilationResult::clear_hlo_module() {
  if (_impl_.hlo_module_ != nullptr) _impl_.hlo_module_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CompilationResult::clear_status() {
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CompilationResult::CompilationResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &CompilationResult::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:xla.CompilationResult)
}
CompilationResult::CompilationResult(const CompilationResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CompilationResult* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_.counters_)*/{}
    , decltype(_impl_.hlo_module_){nullptr}
    , decltype(_impl_.perf_stats_){nullptr}
    , decltype(_impl_.status_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.counters_.MergeFrom(from._impl_.counters_);
  if (from._internal_has_hlo_module()) {
    _this->_impl_.hlo_module_ = new ::xla::HloModuleProto(*from._impl_.hlo_module_);
  }
  if (from._internal_has_perf_stats()) {
    _this->_impl_.perf_stats_ = new ::xla::CompilerPerfStats(*from._impl_.perf_stats_);
  }
  if (from._internal_has_status()) {
    _this->_impl_.status_ = new ::tensorflow::StatusProto(*from._impl_.status_);
  }
  // @@protoc_insertion_point(copy_constructor:xla.CompilationResult)
}

inline void CompilationResult::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_.counters_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.hlo_module_){nullptr}
    , decltype(_impl_.perf_stats_){nullptr}
    , decltype(_impl_.status_){nullptr}
  };
}

CompilationResult::~CompilationResult() {
  // @@protoc_insertion_point(destructor:xla.CompilationResult)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void CompilationResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.counters_.Destruct();
  _impl_.counters_.~MapField();
  if (this != internal_default_instance()) delete _impl_.hlo_module_;
  if (this != internal_default_instance()) delete _impl_.perf_stats_;
  if (this != internal_default_instance()) delete _impl_.status_;
}

void CompilationResult::ArenaDtor(void* object) {
  CompilationResult* _this = reinterpret_cast< CompilationResult* >(object);
  _this->_impl_.counters_.Destruct();
}
void CompilationResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CompilationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:xla.CompilationResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.counters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(_impl_.hlo_module_ != nullptr);
      _impl_.hlo_module_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(_impl_.perf_stats_ != nullptr);
      _impl_.perf_stats_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompilationResult::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .xla.HloModuleProto hlo_module = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_hlo_module(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .xla.CompilerPerfStats perf_stats = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_perf_stats(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .tensorflow.StatusProto status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, int64> counters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.counters_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompilationResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:xla.CompilationResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .xla.HloModuleProto hlo_module = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::hlo_module(this),
        _Internal::hlo_module(this).GetCachedSize(), target, stream);
  }

  // optional .xla.CompilerPerfStats perf_stats = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::perf_stats(this),
        _Internal::perf_stats(this).GetCachedSize(), target, stream);
  }

  // optional .tensorflow.StatusProto status = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  // map<string, int64> counters = 4;
  if (!this->_internal_counters().empty()) {
    using MapType = ::_pb::Map<std::string, int64_t>;
    using WireHelper = CompilationResult_CountersEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_counters();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
        "xla.CompilationResult.CountersEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(4, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:xla.CompilationResult)
  return target;
}

size_t CompilationResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:xla.CompilationResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int64> counters = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_counters_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >::const_iterator
      it = this->_internal_counters().begin();
      it != this->_internal_counters().end(); ++it) {
    total_size += CompilationResult_CountersEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .xla.HloModuleProto hlo_module = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.hlo_module_);
    }

    // optional .xla.CompilerPerfStats perf_stats = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.perf_stats_);
    }

    // optional .tensorflow.StatusProto status = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.status_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompilationResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CompilationResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompilationResult::GetClassData() const { return &_class_data_; }


void CompilationResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CompilationResult*>(&to_msg);
  auto& from = static_cast<const CompilationResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:xla.CompilationResult)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.counters_.MergeFrom(from._impl_.counters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_hlo_module()->::xla::HloModuleProto::MergeFrom(
          from._internal_hlo_module());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_perf_stats()->::xla::CompilerPerfStats::MergeFrom(
          from._internal_perf_stats());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_status()->::tensorflow::StatusProto::MergeFrom(
          from._internal_status());
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompilationResult::CopyFrom(const CompilationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:xla.CompilationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompilationResult::IsInitialized() const {
  return true;
}

void CompilationResult::InternalSwap(CompilationResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.counters_.InternalSwap(&other->_impl_.counters_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CompilationResult, _impl_.status_)
      + sizeof(CompilationResult::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CompilationResult, _impl_.hlo_module_)>(
          reinterpret_cast<char*>(&_impl_.hlo_module_),
          reinterpret_cast<char*>(&other->_impl_.hlo_module_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CompilationResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_getter, &descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto_once,
      file_level_metadata_xla_2fservice_2fxla_5fcompile_5fresult_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace xla
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::xla::CompilerPerfStats*
Arena::CreateMaybeMessage< ::xla::CompilerPerfStats >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::CompilerPerfStats >(arena);
}
template<> PROTOBUF_NOINLINE ::xla::CompilationResult_CountersEntry_DoNotUse*
Arena::CreateMaybeMessage< ::xla::CompilationResult_CountersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::CompilationResult_CountersEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::xla::CompilationResult*
Arena::CreateMaybeMessage< ::xla::CompilationResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::xla::CompilationResult >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
