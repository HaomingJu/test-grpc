// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xla/service/xla_compile_result.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fxla_5fcompile_5fresult_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fxla_5fcompile_5fresult_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include "xla/service/hlo.pb.h"
#include "tsl/protobuf/status.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_xla_2fservice_2fxla_5fcompile_5fresult_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_xla_2fservice_2fxla_5fcompile_5fresult_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_xla_2fservice_2fxla_5fcompile_5fresult_2eproto;
namespace xla {
class CompilationResult;
struct CompilationResultDefaultTypeInternal;
extern CompilationResultDefaultTypeInternal _CompilationResult_default_instance_;
class CompilationResult_CountersEntry_DoNotUse;
struct CompilationResult_CountersEntry_DoNotUseDefaultTypeInternal;
extern CompilationResult_CountersEntry_DoNotUseDefaultTypeInternal _CompilationResult_CountersEntry_DoNotUse_default_instance_;
class CompilerPerfStats;
struct CompilerPerfStatsDefaultTypeInternal;
extern CompilerPerfStatsDefaultTypeInternal _CompilerPerfStats_default_instance_;
}  // namespace xla
PROTOBUF_NAMESPACE_OPEN
template<> ::xla::CompilationResult* Arena::CreateMaybeMessage<::xla::CompilationResult>(Arena*);
template<> ::xla::CompilationResult_CountersEntry_DoNotUse* Arena::CreateMaybeMessage<::xla::CompilationResult_CountersEntry_DoNotUse>(Arena*);
template<> ::xla::CompilerPerfStats* Arena::CreateMaybeMessage<::xla::CompilerPerfStats>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace xla {

// ===================================================================

class CompilerPerfStats final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xla.CompilerPerfStats) */ {
 public:
  inline CompilerPerfStats() : CompilerPerfStats(nullptr) {}
  ~CompilerPerfStats() override;
  explicit PROTOBUF_CONSTEXPR CompilerPerfStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CompilerPerfStats(const CompilerPerfStats& from);
  CompilerPerfStats(CompilerPerfStats&& from) noexcept
    : CompilerPerfStats() {
    *this = ::std::move(from);
  }

  inline CompilerPerfStats& operator=(const CompilerPerfStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompilerPerfStats& operator=(CompilerPerfStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompilerPerfStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompilerPerfStats* internal_default_instance() {
    return reinterpret_cast<const CompilerPerfStats*>(
               &_CompilerPerfStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CompilerPerfStats& a, CompilerPerfStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CompilerPerfStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompilerPerfStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompilerPerfStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CompilerPerfStats>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CompilerPerfStats& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CompilerPerfStats& from) {
    CompilerPerfStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompilerPerfStats* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xla.CompilerPerfStats";
  }
  protected:
  explicit CompilerPerfStats(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInitDurationFieldNumber = 1,
    kHloVerificationDurationFieldNumber = 2,
    kCompilationPrologueDurationFieldNumber = 3,
    kCompilationDurationFieldNumber = 4,
    kTotalDurationFieldNumber = 5,
  };
  // optional .google.protobuf.Duration init_duration = 1;
  bool has_init_duration() const;
  private:
  bool _internal_has_init_duration() const;
  public:
  void clear_init_duration();
  const ::PROTOBUF_NAMESPACE_ID::Duration& init_duration() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_init_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_init_duration();
  void set_allocated_init_duration(::PROTOBUF_NAMESPACE_ID::Duration* init_duration);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_init_duration() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_init_duration();
  public:
  void unsafe_arena_set_allocated_init_duration(
      ::PROTOBUF_NAMESPACE_ID::Duration* init_duration);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_init_duration();

  // optional .google.protobuf.Duration hlo_verification_duration = 2;
  bool has_hlo_verification_duration() const;
  private:
  bool _internal_has_hlo_verification_duration() const;
  public:
  void clear_hlo_verification_duration();
  const ::PROTOBUF_NAMESPACE_ID::Duration& hlo_verification_duration() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_hlo_verification_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_hlo_verification_duration();
  void set_allocated_hlo_verification_duration(::PROTOBUF_NAMESPACE_ID::Duration* hlo_verification_duration);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_hlo_verification_duration() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_hlo_verification_duration();
  public:
  void unsafe_arena_set_allocated_hlo_verification_duration(
      ::PROTOBUF_NAMESPACE_ID::Duration* hlo_verification_duration);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_hlo_verification_duration();

  // optional .google.protobuf.Duration compilation_prologue_duration = 3;
  bool has_compilation_prologue_duration() const;
  private:
  bool _internal_has_compilation_prologue_duration() const;
  public:
  void clear_compilation_prologue_duration();
  const ::PROTOBUF_NAMESPACE_ID::Duration& compilation_prologue_duration() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_compilation_prologue_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_compilation_prologue_duration();
  void set_allocated_compilation_prologue_duration(::PROTOBUF_NAMESPACE_ID::Duration* compilation_prologue_duration);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_compilation_prologue_duration() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_compilation_prologue_duration();
  public:
  void unsafe_arena_set_allocated_compilation_prologue_duration(
      ::PROTOBUF_NAMESPACE_ID::Duration* compilation_prologue_duration);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_compilation_prologue_duration();

  // optional .google.protobuf.Duration compilation_duration = 4;
  bool has_compilation_duration() const;
  private:
  bool _internal_has_compilation_duration() const;
  public:
  void clear_compilation_duration();
  const ::PROTOBUF_NAMESPACE_ID::Duration& compilation_duration() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_compilation_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_compilation_duration();
  void set_allocated_compilation_duration(::PROTOBUF_NAMESPACE_ID::Duration* compilation_duration);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_compilation_duration() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_compilation_duration();
  public:
  void unsafe_arena_set_allocated_compilation_duration(
      ::PROTOBUF_NAMESPACE_ID::Duration* compilation_duration);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_compilation_duration();

  // optional .google.protobuf.Duration total_duration = 5;
  bool has_total_duration() const;
  private:
  bool _internal_has_total_duration() const;
  public:
  void clear_total_duration();
  const ::PROTOBUF_NAMESPACE_ID::Duration& total_duration() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Duration* release_total_duration();
  ::PROTOBUF_NAMESPACE_ID::Duration* mutable_total_duration();
  void set_allocated_total_duration(::PROTOBUF_NAMESPACE_ID::Duration* total_duration);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Duration& _internal_total_duration() const;
  ::PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_total_duration();
  public:
  void unsafe_arena_set_allocated_total_duration(
      ::PROTOBUF_NAMESPACE_ID::Duration* total_duration);
  ::PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_total_duration();

  // @@protoc_insertion_point(class_scope:xla.CompilerPerfStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::Duration* init_duration_;
    ::PROTOBUF_NAMESPACE_ID::Duration* hlo_verification_duration_;
    ::PROTOBUF_NAMESPACE_ID::Duration* compilation_prologue_duration_;
    ::PROTOBUF_NAMESPACE_ID::Duration* compilation_duration_;
    ::PROTOBUF_NAMESPACE_ID::Duration* total_duration_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fxla_5fcompile_5fresult_2eproto;
};
// -------------------------------------------------------------------

class CompilationResult_CountersEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CompilationResult_CountersEntry_DoNotUse, 
    std::string, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CompilationResult_CountersEntry_DoNotUse, 
    std::string, int64_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64> SuperType;
  CompilationResult_CountersEntry_DoNotUse();
  explicit PROTOBUF_CONSTEXPR CompilationResult_CountersEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit CompilationResult_CountersEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CompilationResult_CountersEntry_DoNotUse& other);
  static const CompilationResult_CountersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CompilationResult_CountersEntry_DoNotUse*>(&_CompilationResult_CountersEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "xla.CompilationResult.CountersEntry.key");
#else
    (void) s;
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  friend struct ::TableStruct_xla_2fservice_2fxla_5fcompile_5fresult_2eproto;
};

// -------------------------------------------------------------------

class CompilationResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:xla.CompilationResult) */ {
 public:
  inline CompilationResult() : CompilationResult(nullptr) {}
  ~CompilationResult() override;
  explicit PROTOBUF_CONSTEXPR CompilationResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CompilationResult(const CompilationResult& from);
  CompilationResult(CompilationResult&& from) noexcept
    : CompilationResult() {
    *this = ::std::move(from);
  }

  inline CompilationResult& operator=(const CompilationResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CompilationResult& operator=(CompilationResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CompilationResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CompilationResult* internal_default_instance() {
    return reinterpret_cast<const CompilationResult*>(
               &_CompilationResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CompilationResult& a, CompilationResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CompilationResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CompilationResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CompilationResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CompilationResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CompilationResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CompilationResult& from) {
    CompilationResult::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CompilationResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "xla.CompilationResult";
  }
  protected:
  explicit CompilationResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kCountersFieldNumber = 4,
    kHloModuleFieldNumber = 1,
    kPerfStatsFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // map<string, int64> counters = 4;
  int counters_size() const;
  private:
  int _internal_counters_size() const;
  public:
  void clear_counters();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >&
      _internal_counters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >*
      _internal_mutable_counters();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >&
      counters() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >*
      mutable_counters();

  // optional .xla.HloModuleProto hlo_module = 1;
  bool has_hlo_module() const;
  private:
  bool _internal_has_hlo_module() const;
  public:
  void clear_hlo_module();
  const ::xla::HloModuleProto& hlo_module() const;
  PROTOBUF_NODISCARD ::xla::HloModuleProto* release_hlo_module();
  ::xla::HloModuleProto* mutable_hlo_module();
  void set_allocated_hlo_module(::xla::HloModuleProto* hlo_module);
  private:
  const ::xla::HloModuleProto& _internal_hlo_module() const;
  ::xla::HloModuleProto* _internal_mutable_hlo_module();
  public:
  void unsafe_arena_set_allocated_hlo_module(
      ::xla::HloModuleProto* hlo_module);
  ::xla::HloModuleProto* unsafe_arena_release_hlo_module();

  // optional .xla.CompilerPerfStats perf_stats = 2;
  bool has_perf_stats() const;
  private:
  bool _internal_has_perf_stats() const;
  public:
  void clear_perf_stats();
  const ::xla::CompilerPerfStats& perf_stats() const;
  PROTOBUF_NODISCARD ::xla::CompilerPerfStats* release_perf_stats();
  ::xla::CompilerPerfStats* mutable_perf_stats();
  void set_allocated_perf_stats(::xla::CompilerPerfStats* perf_stats);
  private:
  const ::xla::CompilerPerfStats& _internal_perf_stats() const;
  ::xla::CompilerPerfStats* _internal_mutable_perf_stats();
  public:
  void unsafe_arena_set_allocated_perf_stats(
      ::xla::CompilerPerfStats* perf_stats);
  ::xla::CompilerPerfStats* unsafe_arena_release_perf_stats();

  // optional .tensorflow.StatusProto status = 3;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  const ::tensorflow::StatusProto& status() const;
  PROTOBUF_NODISCARD ::tensorflow::StatusProto* release_status();
  ::tensorflow::StatusProto* mutable_status();
  void set_allocated_status(::tensorflow::StatusProto* status);
  private:
  const ::tensorflow::StatusProto& _internal_status() const;
  ::tensorflow::StatusProto* _internal_mutable_status();
  public:
  void unsafe_arena_set_allocated_status(
      ::tensorflow::StatusProto* status);
  ::tensorflow::StatusProto* unsafe_arena_release_status();

  // @@protoc_insertion_point(class_scope:xla.CompilationResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::MapField<
        CompilationResult_CountersEntry_DoNotUse,
        std::string, int64_t,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64> counters_;
    ::xla::HloModuleProto* hlo_module_;
    ::xla::CompilerPerfStats* perf_stats_;
    ::tensorflow::StatusProto* status_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_xla_2fservice_2fxla_5fcompile_5fresult_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CompilerPerfStats

// optional .google.protobuf.Duration init_duration = 1;
inline bool CompilerPerfStats::_internal_has_init_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.init_duration_ != nullptr);
  return value;
}
inline bool CompilerPerfStats::has_init_duration() const {
  return _internal_has_init_duration();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::_internal_init_duration() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.init_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::init_duration() const {
  // @@protoc_insertion_point(field_get:xla.CompilerPerfStats.init_duration)
  return _internal_init_duration();
}
inline void CompilerPerfStats::unsafe_arena_set_allocated_init_duration(
    ::PROTOBUF_NAMESPACE_ID::Duration* init_duration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.init_duration_);
  }
  _impl_.init_duration_ = init_duration;
  if (init_duration) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilerPerfStats.init_duration)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::release_init_duration() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.init_duration_;
  _impl_.init_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::unsafe_arena_release_init_duration() {
  // @@protoc_insertion_point(field_release:xla.CompilerPerfStats.init_duration)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.init_duration_;
  _impl_.init_duration_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::_internal_mutable_init_duration() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.init_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.init_duration_ = p;
  }
  return _impl_.init_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::mutable_init_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_init_duration();
  // @@protoc_insertion_point(field_mutable:xla.CompilerPerfStats.init_duration)
  return _msg;
}
inline void CompilerPerfStats::set_allocated_init_duration(::PROTOBUF_NAMESPACE_ID::Duration* init_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.init_duration_);
  }
  if (init_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(init_duration));
    if (message_arena != submessage_arena) {
      init_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, init_duration, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.init_duration_ = init_duration;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilerPerfStats.init_duration)
}

// optional .google.protobuf.Duration hlo_verification_duration = 2;
inline bool CompilerPerfStats::_internal_has_hlo_verification_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hlo_verification_duration_ != nullptr);
  return value;
}
inline bool CompilerPerfStats::has_hlo_verification_duration() const {
  return _internal_has_hlo_verification_duration();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::_internal_hlo_verification_duration() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.hlo_verification_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::hlo_verification_duration() const {
  // @@protoc_insertion_point(field_get:xla.CompilerPerfStats.hlo_verification_duration)
  return _internal_hlo_verification_duration();
}
inline void CompilerPerfStats::unsafe_arena_set_allocated_hlo_verification_duration(
    ::PROTOBUF_NAMESPACE_ID::Duration* hlo_verification_duration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hlo_verification_duration_);
  }
  _impl_.hlo_verification_duration_ = hlo_verification_duration;
  if (hlo_verification_duration) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilerPerfStats.hlo_verification_duration)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::release_hlo_verification_duration() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.hlo_verification_duration_;
  _impl_.hlo_verification_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::unsafe_arena_release_hlo_verification_duration() {
  // @@protoc_insertion_point(field_release:xla.CompilerPerfStats.hlo_verification_duration)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.hlo_verification_duration_;
  _impl_.hlo_verification_duration_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::_internal_mutable_hlo_verification_duration() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.hlo_verification_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.hlo_verification_duration_ = p;
  }
  return _impl_.hlo_verification_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::mutable_hlo_verification_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_hlo_verification_duration();
  // @@protoc_insertion_point(field_mutable:xla.CompilerPerfStats.hlo_verification_duration)
  return _msg;
}
inline void CompilerPerfStats::set_allocated_hlo_verification_duration(::PROTOBUF_NAMESPACE_ID::Duration* hlo_verification_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hlo_verification_duration_);
  }
  if (hlo_verification_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hlo_verification_duration));
    if (message_arena != submessage_arena) {
      hlo_verification_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hlo_verification_duration, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.hlo_verification_duration_ = hlo_verification_duration;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilerPerfStats.hlo_verification_duration)
}

// optional .google.protobuf.Duration compilation_prologue_duration = 3;
inline bool CompilerPerfStats::_internal_has_compilation_prologue_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compilation_prologue_duration_ != nullptr);
  return value;
}
inline bool CompilerPerfStats::has_compilation_prologue_duration() const {
  return _internal_has_compilation_prologue_duration();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::_internal_compilation_prologue_duration() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.compilation_prologue_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::compilation_prologue_duration() const {
  // @@protoc_insertion_point(field_get:xla.CompilerPerfStats.compilation_prologue_duration)
  return _internal_compilation_prologue_duration();
}
inline void CompilerPerfStats::unsafe_arena_set_allocated_compilation_prologue_duration(
    ::PROTOBUF_NAMESPACE_ID::Duration* compilation_prologue_duration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.compilation_prologue_duration_);
  }
  _impl_.compilation_prologue_duration_ = compilation_prologue_duration;
  if (compilation_prologue_duration) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilerPerfStats.compilation_prologue_duration)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::release_compilation_prologue_duration() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.compilation_prologue_duration_;
  _impl_.compilation_prologue_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::unsafe_arena_release_compilation_prologue_duration() {
  // @@protoc_insertion_point(field_release:xla.CompilerPerfStats.compilation_prologue_duration)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.compilation_prologue_duration_;
  _impl_.compilation_prologue_duration_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::_internal_mutable_compilation_prologue_duration() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.compilation_prologue_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.compilation_prologue_duration_ = p;
  }
  return _impl_.compilation_prologue_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::mutable_compilation_prologue_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_compilation_prologue_duration();
  // @@protoc_insertion_point(field_mutable:xla.CompilerPerfStats.compilation_prologue_duration)
  return _msg;
}
inline void CompilerPerfStats::set_allocated_compilation_prologue_duration(::PROTOBUF_NAMESPACE_ID::Duration* compilation_prologue_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.compilation_prologue_duration_);
  }
  if (compilation_prologue_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(compilation_prologue_duration));
    if (message_arena != submessage_arena) {
      compilation_prologue_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, compilation_prologue_duration, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.compilation_prologue_duration_ = compilation_prologue_duration;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilerPerfStats.compilation_prologue_duration)
}

// optional .google.protobuf.Duration compilation_duration = 4;
inline bool CompilerPerfStats::_internal_has_compilation_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.compilation_duration_ != nullptr);
  return value;
}
inline bool CompilerPerfStats::has_compilation_duration() const {
  return _internal_has_compilation_duration();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::_internal_compilation_duration() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.compilation_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::compilation_duration() const {
  // @@protoc_insertion_point(field_get:xla.CompilerPerfStats.compilation_duration)
  return _internal_compilation_duration();
}
inline void CompilerPerfStats::unsafe_arena_set_allocated_compilation_duration(
    ::PROTOBUF_NAMESPACE_ID::Duration* compilation_duration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.compilation_duration_);
  }
  _impl_.compilation_duration_ = compilation_duration;
  if (compilation_duration) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilerPerfStats.compilation_duration)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::release_compilation_duration() {
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.compilation_duration_;
  _impl_.compilation_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::unsafe_arena_release_compilation_duration() {
  // @@protoc_insertion_point(field_release:xla.CompilerPerfStats.compilation_duration)
  _impl_._has_bits_[0] &= ~0x00000008u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.compilation_duration_;
  _impl_.compilation_duration_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::_internal_mutable_compilation_duration() {
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.compilation_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.compilation_duration_ = p;
  }
  return _impl_.compilation_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::mutable_compilation_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_compilation_duration();
  // @@protoc_insertion_point(field_mutable:xla.CompilerPerfStats.compilation_duration)
  return _msg;
}
inline void CompilerPerfStats::set_allocated_compilation_duration(::PROTOBUF_NAMESPACE_ID::Duration* compilation_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.compilation_duration_);
  }
  if (compilation_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(compilation_duration));
    if (message_arena != submessage_arena) {
      compilation_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, compilation_duration, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.compilation_duration_ = compilation_duration;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilerPerfStats.compilation_duration)
}

// optional .google.protobuf.Duration total_duration = 5;
inline bool CompilerPerfStats::_internal_has_total_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.total_duration_ != nullptr);
  return value;
}
inline bool CompilerPerfStats::has_total_duration() const {
  return _internal_has_total_duration();
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::_internal_total_duration() const {
  const ::PROTOBUF_NAMESPACE_ID::Duration* p = _impl_.total_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Duration&>(
      ::PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Duration& CompilerPerfStats::total_duration() const {
  // @@protoc_insertion_point(field_get:xla.CompilerPerfStats.total_duration)
  return _internal_total_duration();
}
inline void CompilerPerfStats::unsafe_arena_set_allocated_total_duration(
    ::PROTOBUF_NAMESPACE_ID::Duration* total_duration) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.total_duration_);
  }
  _impl_.total_duration_ = total_duration;
  if (total_duration) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilerPerfStats.total_duration)
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::release_total_duration() {
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.total_duration_;
  _impl_.total_duration_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::unsafe_arena_release_total_duration() {
  // @@protoc_insertion_point(field_release:xla.CompilerPerfStats.total_duration)
  _impl_._has_bits_[0] &= ~0x00000010u;
  ::PROTOBUF_NAMESPACE_ID::Duration* temp = _impl_.total_duration_;
  _impl_.total_duration_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::_internal_mutable_total_duration() {
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.total_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Duration>(GetArenaForAllocation());
    _impl_.total_duration_ = p;
  }
  return _impl_.total_duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::Duration* CompilerPerfStats::mutable_total_duration() {
  ::PROTOBUF_NAMESPACE_ID::Duration* _msg = _internal_mutable_total_duration();
  // @@protoc_insertion_point(field_mutable:xla.CompilerPerfStats.total_duration)
  return _msg;
}
inline void CompilerPerfStats::set_allocated_total_duration(::PROTOBUF_NAMESPACE_ID::Duration* total_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.total_duration_);
  }
  if (total_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(total_duration));
    if (message_arena != submessage_arena) {
      total_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, total_duration, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.total_duration_ = total_duration;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilerPerfStats.total_duration)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CompilationResult

// optional .xla.HloModuleProto hlo_module = 1;
inline bool CompilationResult::_internal_has_hlo_module() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hlo_module_ != nullptr);
  return value;
}
inline bool CompilationResult::has_hlo_module() const {
  return _internal_has_hlo_module();
}
inline const ::xla::HloModuleProto& CompilationResult::_internal_hlo_module() const {
  const ::xla::HloModuleProto* p = _impl_.hlo_module_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::HloModuleProto&>(
      ::xla::_HloModuleProto_default_instance_);
}
inline const ::xla::HloModuleProto& CompilationResult::hlo_module() const {
  // @@protoc_insertion_point(field_get:xla.CompilationResult.hlo_module)
  return _internal_hlo_module();
}
inline void CompilationResult::unsafe_arena_set_allocated_hlo_module(
    ::xla::HloModuleProto* hlo_module) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hlo_module_);
  }
  _impl_.hlo_module_ = hlo_module;
  if (hlo_module) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilationResult.hlo_module)
}
inline ::xla::HloModuleProto* CompilationResult::release_hlo_module() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::HloModuleProto* temp = _impl_.hlo_module_;
  _impl_.hlo_module_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::xla::HloModuleProto* CompilationResult::unsafe_arena_release_hlo_module() {
  // @@protoc_insertion_point(field_release:xla.CompilationResult.hlo_module)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::xla::HloModuleProto* temp = _impl_.hlo_module_;
  _impl_.hlo_module_ = nullptr;
  return temp;
}
inline ::xla::HloModuleProto* CompilationResult::_internal_mutable_hlo_module() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.hlo_module_ == nullptr) {
    auto* p = CreateMaybeMessage<::xla::HloModuleProto>(GetArenaForAllocation());
    _impl_.hlo_module_ = p;
  }
  return _impl_.hlo_module_;
}
inline ::xla::HloModuleProto* CompilationResult::mutable_hlo_module() {
  ::xla::HloModuleProto* _msg = _internal_mutable_hlo_module();
  // @@protoc_insertion_point(field_mutable:xla.CompilationResult.hlo_module)
  return _msg;
}
inline void CompilationResult::set_allocated_hlo_module(::xla::HloModuleProto* hlo_module) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.hlo_module_);
  }
  if (hlo_module) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hlo_module));
    if (message_arena != submessage_arena) {
      hlo_module = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hlo_module, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.hlo_module_ = hlo_module;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationResult.hlo_module)
}

// optional .xla.CompilerPerfStats perf_stats = 2;
inline bool CompilationResult::_internal_has_perf_stats() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.perf_stats_ != nullptr);
  return value;
}
inline bool CompilationResult::has_perf_stats() const {
  return _internal_has_perf_stats();
}
inline void CompilationResult::clear_perf_stats() {
  if (_impl_.perf_stats_ != nullptr) _impl_.perf_stats_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::xla::CompilerPerfStats& CompilationResult::_internal_perf_stats() const {
  const ::xla::CompilerPerfStats* p = _impl_.perf_stats_;
  return p != nullptr ? *p : reinterpret_cast<const ::xla::CompilerPerfStats&>(
      ::xla::_CompilerPerfStats_default_instance_);
}
inline const ::xla::CompilerPerfStats& CompilationResult::perf_stats() const {
  // @@protoc_insertion_point(field_get:xla.CompilationResult.perf_stats)
  return _internal_perf_stats();
}
inline void CompilationResult::unsafe_arena_set_allocated_perf_stats(
    ::xla::CompilerPerfStats* perf_stats) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.perf_stats_);
  }
  _impl_.perf_stats_ = perf_stats;
  if (perf_stats) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilationResult.perf_stats)
}
inline ::xla::CompilerPerfStats* CompilationResult::release_perf_stats() {
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::CompilerPerfStats* temp = _impl_.perf_stats_;
  _impl_.perf_stats_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::xla::CompilerPerfStats* CompilationResult::unsafe_arena_release_perf_stats() {
  // @@protoc_insertion_point(field_release:xla.CompilationResult.perf_stats)
  _impl_._has_bits_[0] &= ~0x00000002u;
  ::xla::CompilerPerfStats* temp = _impl_.perf_stats_;
  _impl_.perf_stats_ = nullptr;
  return temp;
}
inline ::xla::CompilerPerfStats* CompilationResult::_internal_mutable_perf_stats() {
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.perf_stats_ == nullptr) {
    auto* p = CreateMaybeMessage<::xla::CompilerPerfStats>(GetArenaForAllocation());
    _impl_.perf_stats_ = p;
  }
  return _impl_.perf_stats_;
}
inline ::xla::CompilerPerfStats* CompilationResult::mutable_perf_stats() {
  ::xla::CompilerPerfStats* _msg = _internal_mutable_perf_stats();
  // @@protoc_insertion_point(field_mutable:xla.CompilationResult.perf_stats)
  return _msg;
}
inline void CompilationResult::set_allocated_perf_stats(::xla::CompilerPerfStats* perf_stats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.perf_stats_;
  }
  if (perf_stats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(perf_stats);
    if (message_arena != submessage_arena) {
      perf_stats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, perf_stats, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.perf_stats_ = perf_stats;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationResult.perf_stats)
}

// optional .tensorflow.StatusProto status = 3;
inline bool CompilationResult::_internal_has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline bool CompilationResult::has_status() const {
  return _internal_has_status();
}
inline const ::tensorflow::StatusProto& CompilationResult::_internal_status() const {
  const ::tensorflow::StatusProto* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::tensorflow::StatusProto&>(
      ::tensorflow::_StatusProto_default_instance_);
}
inline const ::tensorflow::StatusProto& CompilationResult::status() const {
  // @@protoc_insertion_point(field_get:xla.CompilationResult.status)
  return _internal_status();
}
inline void CompilationResult::unsafe_arena_set_allocated_status(
    ::tensorflow::StatusProto* status) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = status;
  if (status) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:xla.CompilationResult.status)
}
inline ::tensorflow::StatusProto* CompilationResult::release_status() {
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::StatusProto* temp = _impl_.status_;
  _impl_.status_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::tensorflow::StatusProto* CompilationResult::unsafe_arena_release_status() {
  // @@protoc_insertion_point(field_release:xla.CompilationResult.status)
  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tensorflow::StatusProto* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::tensorflow::StatusProto* CompilationResult::_internal_mutable_status() {
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.status_ == nullptr) {
    auto* p = CreateMaybeMessage<::tensorflow::StatusProto>(GetArenaForAllocation());
    _impl_.status_ = p;
  }
  return _impl_.status_;
}
inline ::tensorflow::StatusProto* CompilationResult::mutable_status() {
  ::tensorflow::StatusProto* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:xla.CompilationResult.status)
  return _msg;
}
inline void CompilationResult::set_allocated_status(::tensorflow::StatusProto* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.status_);
  }
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status));
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.status_ = status;
  // @@protoc_insertion_point(field_set_allocated:xla.CompilationResult.status)
}

// map<string, int64> counters = 4;
inline int CompilationResult::_internal_counters_size() const {
  return _impl_.counters_.size();
}
inline int CompilationResult::counters_size() const {
  return _internal_counters_size();
}
inline void CompilationResult::clear_counters() {
  _impl_.counters_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >&
CompilationResult::_internal_counters() const {
  return _impl_.counters_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >&
CompilationResult::counters() const {
  // @@protoc_insertion_point(field_map:xla.CompilationResult.counters)
  return _internal_counters();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >*
CompilationResult::_internal_mutable_counters() {
  return _impl_.counters_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int64_t >*
CompilationResult::mutable_counters() {
  // @@protoc_insertion_point(field_mutable_map:xla.CompilationResult.counters)
  return _internal_mutable_counters();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace xla

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_xla_2fservice_2fxla_5fcompile_5fresult_2eproto
