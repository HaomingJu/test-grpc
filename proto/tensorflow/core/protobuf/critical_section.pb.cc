// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/critical_section.proto

#include "tensorflow/core/protobuf/critical_section.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace tensorflow {
PROTOBUF_CONSTEXPR CriticalSectionDef::CriticalSectionDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.critical_section_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CriticalSectionDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CriticalSectionDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CriticalSectionDefDefaultTypeInternal() {}
  union {
    CriticalSectionDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CriticalSectionDefDefaultTypeInternal _CriticalSectionDef_default_instance_;
PROTOBUF_CONSTEXPR CriticalSectionExecutionDef::CriticalSectionExecutionDef(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.execute_in_critical_section_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.exclusive_resource_access_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CriticalSectionExecutionDefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CriticalSectionExecutionDefDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CriticalSectionExecutionDefDefaultTypeInternal() {}
  union {
    CriticalSectionExecutionDef _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CriticalSectionExecutionDefDefaultTypeInternal _CriticalSectionExecutionDef_default_instance_;
}  // namespace tensorflow
static ::_pb::Metadata file_level_metadata_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto = nullptr;

const uint32_t TableStruct_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CriticalSectionDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CriticalSectionDef, _impl_.critical_section_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CriticalSectionExecutionDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::tensorflow::CriticalSectionExecutionDef, _impl_.execute_in_critical_section_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::CriticalSectionExecutionDef, _impl_.exclusive_resource_access_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::tensorflow::CriticalSectionDef)},
  { 7, -1, -1, sizeof(::tensorflow::CriticalSectionExecutionDef)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::tensorflow::_CriticalSectionDef_default_instance_._instance,
  &::tensorflow::_CriticalSectionExecutionDef_default_instance_._instance,
};

const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/tensorflow/core/protobuf/critical_sect"
  "ion.proto\022\ntensorflow\"3\n\022CriticalSection"
  "Def\022\035\n\025critical_section_name\030\001 \001(\t\"j\n\033Cr"
  "iticalSectionExecutionDef\022(\n execute_in_"
  "critical_section_name\030\001 \001(\t\022!\n\031exclusive"
  "_resource_access\030\002 \001(\010B\215\001\n\030org.tensorflo"
  "w.frameworkB\025CriticalSectionProtosP\001ZUgi"
  "thub.com/tensorflow/tensorflow/tensorflo"
  "w/go/core/protobuf/for_core_protos_go_pr"
  "oto\370\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto = {
    false, false, 374, descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto,
    "tensorflow/core/protobuf/critical_section.proto",
    &descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto::offsets,
    file_level_metadata_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto, file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto,
    file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_getter() {
  return &descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto);
namespace tensorflow {

// ===================================================================

class CriticalSectionDef::_Internal {
 public:
};

CriticalSectionDef::CriticalSectionDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CriticalSectionDef)
}
CriticalSectionDef::CriticalSectionDef(const CriticalSectionDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CriticalSectionDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.critical_section_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.critical_section_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.critical_section_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_critical_section_name().empty()) {
    _this->_impl_.critical_section_name_.Set(from._internal_critical_section_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.CriticalSectionDef)
}

inline void CriticalSectionDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.critical_section_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.critical_section_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.critical_section_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CriticalSectionDef::~CriticalSectionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CriticalSectionDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CriticalSectionDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.critical_section_name_.Destroy();
}

void CriticalSectionDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CriticalSectionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CriticalSectionDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.critical_section_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CriticalSectionDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string critical_section_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_critical_section_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.CriticalSectionDef.critical_section_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CriticalSectionDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CriticalSectionDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string critical_section_name = 1;
  if (!this->_internal_critical_section_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_critical_section_name().data(), static_cast<int>(this->_internal_critical_section_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CriticalSectionDef.critical_section_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_critical_section_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CriticalSectionDef)
  return target;
}

size_t CriticalSectionDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CriticalSectionDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string critical_section_name = 1;
  if (!this->_internal_critical_section_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_critical_section_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CriticalSectionDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CriticalSectionDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CriticalSectionDef::GetClassData() const { return &_class_data_; }


void CriticalSectionDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CriticalSectionDef*>(&to_msg);
  auto& from = static_cast<const CriticalSectionDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CriticalSectionDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_critical_section_name().empty()) {
    _this->_internal_set_critical_section_name(from._internal_critical_section_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CriticalSectionDef::CopyFrom(const CriticalSectionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CriticalSectionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalSectionDef::IsInitialized() const {
  return true;
}

void CriticalSectionDef::InternalSwap(CriticalSectionDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.critical_section_name_, lhs_arena,
      &other->_impl_.critical_section_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CriticalSectionDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto[0]);
}

// ===================================================================

class CriticalSectionExecutionDef::_Internal {
 public:
};

CriticalSectionExecutionDef::CriticalSectionExecutionDef(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:tensorflow.CriticalSectionExecutionDef)
}
CriticalSectionExecutionDef::CriticalSectionExecutionDef(const CriticalSectionExecutionDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CriticalSectionExecutionDef* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.execute_in_critical_section_name_){}
    , decltype(_impl_.exclusive_resource_access_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.execute_in_critical_section_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execute_in_critical_section_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execute_in_critical_section_name().empty()) {
    _this->_impl_.execute_in_critical_section_name_.Set(from._internal_execute_in_critical_section_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.exclusive_resource_access_ = from._impl_.exclusive_resource_access_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.CriticalSectionExecutionDef)
}

inline void CriticalSectionExecutionDef::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.execute_in_critical_section_name_){}
    , decltype(_impl_.exclusive_resource_access_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.execute_in_critical_section_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execute_in_critical_section_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CriticalSectionExecutionDef::~CriticalSectionExecutionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.CriticalSectionExecutionDef)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CriticalSectionExecutionDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.execute_in_critical_section_name_.Destroy();
}

void CriticalSectionExecutionDef::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CriticalSectionExecutionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.CriticalSectionExecutionDef)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.execute_in_critical_section_name_.ClearToEmpty();
  _impl_.exclusive_resource_access_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CriticalSectionExecutionDef::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string execute_in_critical_section_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_execute_in_critical_section_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name"));
        } else
          goto handle_unusual;
        continue;
      // bool exclusive_resource_access = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.exclusive_resource_access_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CriticalSectionExecutionDef::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.CriticalSectionExecutionDef)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string execute_in_critical_section_name = 1;
  if (!this->_internal_execute_in_critical_section_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execute_in_critical_section_name().data(), static_cast<int>(this->_internal_execute_in_critical_section_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.CriticalSectionExecutionDef.execute_in_critical_section_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_execute_in_critical_section_name(), target);
  }

  // bool exclusive_resource_access = 2;
  if (this->_internal_exclusive_resource_access() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_exclusive_resource_access(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.CriticalSectionExecutionDef)
  return target;
}

size_t CriticalSectionExecutionDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.CriticalSectionExecutionDef)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string execute_in_critical_section_name = 1;
  if (!this->_internal_execute_in_critical_section_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execute_in_critical_section_name());
  }

  // bool exclusive_resource_access = 2;
  if (this->_internal_exclusive_resource_access() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CriticalSectionExecutionDef::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CriticalSectionExecutionDef::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CriticalSectionExecutionDef::GetClassData() const { return &_class_data_; }


void CriticalSectionExecutionDef::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CriticalSectionExecutionDef*>(&to_msg);
  auto& from = static_cast<const CriticalSectionExecutionDef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.CriticalSectionExecutionDef)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_execute_in_critical_section_name().empty()) {
    _this->_internal_set_execute_in_critical_section_name(from._internal_execute_in_critical_section_name());
  }
  if (from._internal_exclusive_resource_access() != 0) {
    _this->_internal_set_exclusive_resource_access(from._internal_exclusive_resource_access());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CriticalSectionExecutionDef::CopyFrom(const CriticalSectionExecutionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.CriticalSectionExecutionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CriticalSectionExecutionDef::IsInitialized() const {
  return true;
}

void CriticalSectionExecutionDef::InternalSwap(CriticalSectionExecutionDef* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.execute_in_critical_section_name_, lhs_arena,
      &other->_impl_.execute_in_critical_section_name_, rhs_arena
  );
  swap(_impl_.exclusive_resource_access_, other->_impl_.exclusive_resource_access_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CriticalSectionExecutionDef::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_getter, &descriptor_table_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto_once,
      file_level_metadata_tensorflow_2fcore_2fprotobuf_2fcritical_5fsection_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::CriticalSectionDef*
Arena::CreateMaybeMessage< ::tensorflow::CriticalSectionDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CriticalSectionDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::CriticalSectionExecutionDef*
Arena::CreateMaybeMessage< ::tensorflow::CriticalSectionExecutionDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::CriticalSectionExecutionDef >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
